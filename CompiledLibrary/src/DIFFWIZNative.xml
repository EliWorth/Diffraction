<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DIFFWIZNative</name>
    </assembly>
    <members>
        <member name="T:DIFFWIZNative.Diffraction">
            <summary>
            The Diffraction class provides a CLS compliant, Object (native) interface to the
            M-functions contained in the files:
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\arrow3D.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Structure\CartesianSystem.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\column3D.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\AtomicProperties\Density.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Electrons\ElectronRealScatteringFactor.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\GeometricalSimulation1.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\MultipeakIntensities.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\normalize.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\PlotCoplanarGeom.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\PlotNonCoplanarGeom.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\plotp.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\rotatePoints.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\3DVectorPlotting\scatter3_2.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\AtomicProperties\ScatteringFactor.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\StructureFactor.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Structure\VisualizeCrystal.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayAttenuationLength.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayComplexScatteringFactor.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayIndexOfRefraction.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayRealScatteringFactor.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayReflectivity.m
            <newpara></newpara>
            C:\Users\maher\My Dropbox\Lund\DIFFWIZ\Xrays\XrayTransmission.m
            <newpara></newpara>
            deployprint.m
            <newpara></newpara>
            printdlg.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Component Runtime
            instance.
            </summary>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.#ctor">
            <summary>
            Constructs a new instance of the Diffraction class.
            </summary>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D">
             <summary>
             Provides a single output, 0-input Objectinterface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="pos">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <param name="stemRatio">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.arrow3D(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the arrow3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             arrowHandle = arrow3D(pos, deltaValues, colorCode, stemRatio)                    
             Used to plot a single 3D arrow with a cylindrical stem and cone arrowhead
             pos = [X,Y,Z] - spatial location of the starting point of the arrow (end of stem)
             deltaValues = [QX,QY,QZ] - delta parameters denoting the magnitude of the arrow
             along the x,y,z-axes (relative to 'pos')
             colorCode - Color parameters as per the 'surf' command.  For example, 'r', 'red',
             [1 0 0] are all examples of a red-colored arrow
             stemRatio - The ratio of the length of the stem in proportion to the arrowhead. 
             For example, a call of:
             arrow3D([0,0,0], [100,0,0] , 'r', 0.82) will produce a red arrow of magnitude
             100, with the arrowstem spanning a distance
             of 82 (note 0.82 ratio of length 100) while the arrowhead (cone) spans 18.  
             Example:
             arrow3D([0,0,0], [4,3,7]);    ---- arrow with default parameters
             axis equal;
             Author: Shawn Arseneau
             Created: September 14, 2006
             Updated: September 18, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <param name="stemRatio">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.CartesianSystem">
             <summary>
             Provides a single output, 0-input Objectinterface to the CartesianSystem
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice.LatticeVectors = [Lattice.a 0 0; -sin(pi/6)*Lattice.a cos(pi/6)*Lattice.a
             0; 0 0 Lattice.c];
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.CartesianSystem(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the CartesianSystem
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice.LatticeVectors = [Lattice.a 0 0; -sin(pi/6)*Lattice.a cos(pi/6)*Lattice.a
             0; 0 0 Lattice.c];
             </remarks>
             <param name="Lattice_in1">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.CartesianSystem(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the CartesianSystem M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice.LatticeVectors = [Lattice.a 0 0; -sin(pi/6)*Lattice.a cos(pi/6)*Lattice.a
             0; 0 0 Lattice.c];
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.CartesianSystem(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the CartesianSystem M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice.LatticeVectors = [Lattice.a 0 0; -sin(pi/6)*Lattice.a cos(pi/6)*Lattice.a
             0; 0 0 Lattice.c];
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice_in1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D">
             <summary>
             Provides a single output, 0-input Objectinterface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="pos">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <param name="stemRatio">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.column3D(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the column3D M-function.
             </summary>
             <remarks>
             M-Documentation:
             COLUMN3D - plot column in three dimensions
             ( very slight modification of ARROW3D.m written by Shawn Arseneau)
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="pos">Input argument #1</param>
             <param name="deltaValues">Input argument #2</param>
             <param name="colorCode">Input argument #3</param>
             <param name="stemRatio">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Density">
             <summary>
             Provides a single output, 0-input Objectinterface to the Density M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Density(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the Density M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Density(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the Density M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.Density(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the Density M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor">
             <summary>
             Provides a single output, 0-input Objectinterface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ElectronRealScatteringFactor(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the
             ElectronRealScatteringFactor M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1">
             <summary>
             Provides a single output, 0-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <param name="hkl_space">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <param name="hkl_space">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <param name="hkl_space">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.GeometricalSimulation1(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the GeometricalSimulation1
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save GeometricalSimulation1.mat Lattice Probe Crystal Detector hkl_space
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="Detector">Input argument #3</param>
             <param name="hkl_space">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities">
             <summary>
             Provides a single output, 0-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 6-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 7-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <param name="pltColors">Input argument #7</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 8-input Objectinterface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <param name="pltColors">Input argument #7</param>
             <param name="KeepFigOpen">Input argument #8</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 6-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 7-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <param name="pltColors">Input argument #7</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.MultipeakIntensities(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 8-input Object interface to the MultipeakIntensities
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save MultipeakIntensities.mat Lattice hkl_space EnergyOrLambda Q_Range s_scale
             FigNum
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Probe">Input argument #2</param>
             <param name="hkl_space">Input argument #3</param>
             <param name="Q_Range">Input argument #4</param>
             <param name="s_scale">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <param name="pltColors">Input argument #7</param>
             <param name="KeepFigOpen">Input argument #8</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.normalize">
             <summary>
             Provides a single output, 0-input Objectinterface to the normalize M-function.
             </summary>
             <remarks>
             M-Documentation:
             NORMALIZE - return vector with unit length
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.normalize(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the normalize M-function.
             </summary>
             <remarks>
             M-Documentation:
             NORMALIZE - return vector with unit length
             </remarks>
             <param name="x">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.normalize(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the normalize M-function.
             </summary>
             <remarks>
             M-Documentation:
             NORMALIZE - return vector with unit length
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.normalize(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the normalize M-function.
             </summary>
             <remarks>
             M-Documentation:
             NORMALIZE - return vector with unit length
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="x">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom">
             <summary>
             Provides a void output, 0-input Objectinterface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom(System.Object)">
             <summary>
             Provides a void output, 1-input Objectinterface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
             <param name="StructureFactor">Input argument #1</param>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom(System.Object,System.Object)">
             <summary>
             Provides a void output, 2-input Objectinterface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
             <param name="StructureFactor">Input argument #1</param>
             <param name="FigNum">Input argument #2</param>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="StructureFactor">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotCoplanarGeom(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the PlotCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             reference point
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="StructureFactor">Input argument #1</param>
             <param name="FigNum">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom">
             <summary>
             Provides a single output, 0-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="BraggAngle">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <param name="ReflectionNormal">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <param name="ReflectionNormal">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="BraggAngle">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <param name="ReflectionNormal">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.PlotNonCoplanarGeom(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the PlotNonCoplanarGeom
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test2.mat BraggAngle IncidentPsi SurfaceNormal ReflectionNormal
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="BraggAngle">Input argument #1</param>
             <param name="IncidentPsi">Input argument #2</param>
             <param name="SurfaceNormal">Input argument #3</param>
             <param name="ReflectionNormal">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp">
             <summary>
             Provides a single output, 0-input Objectinterface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="v1">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <param name="str">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="v1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.plotp(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the plotp M-function.
             </summary>
             <remarks>
             M-Documentation:
             PLOTP - plot a plane or line in 3 dimensions.
             For the first two arguments, user supplies two linearly independent 3x1 vectors,
             and output 
             is a graph of the plane generated by these two vectors. A single input of
             one 3x2 matrix is also ok.
             The user may specify just one vector. The plot will 
             then be just the line generated by that vector.  
             The plot will also be a line if the two input vectors are linearly
             dependent. 
             Optional 3rd argument: User may also specify a string that determines the plot
             style of the
             plane, using the same string options as for MATLAB's plot function.
             OTHER FUNCTIONS REQUIRED: arrow3D.m (by Shawn Arseneau), column3D.m,
             scatter3_2.m, normalize.m
             EXAMPLE:  >> plotp([1;1;1],[2;2;-4])
             >> plotp([1;1;1],[3;-3;0],'m')
             EXAMPLE: for matrix of rank 1, plot the 2 dimensional nullspace (a plane), and 1
             dimensional row space (a line), the two should be visibly orthogonal subspaces
             >> A=[1 0 0; 2 0 0; 3 0 0]
             A =
             1     0     0
             2     0     0
             3     0     0
             >> hold on
             >> plotp(null(A))
             >> plotp(orth(A'),'m')
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="v1">Input argument #1</param>
             <param name="v2">Input argument #2</param>
             <param name="str">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints">
             <summary>
             Provides a single output, 0-input Objectinterface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <param name="alignmentVector">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <param name="alignmentVector">Input argument #1</param>
             <param name="originalData">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="alignmentVector">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.rotatePoints(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the rotatePoints M-function.
             </summary>
             <remarks>
             M-Documentation:
             rotatedData = rotatePoints(alignmentVector, originalData)                        
             Rotate the 'originalData' in the form of Nx2 or Nx3 about the origin by aligning
             the x-axis with the alignment vector
             Rdata = rotatePoints([1,2,-1], [Xpts(:), Ypts(:), Zpts(:)]) - rotate the
             (X,Y,Z)pts in 3D with respect to the vector [1,2,-1]
             Rotating using spherical components can be done by first converting using
             [dX,dY,dZ] = cart2sph(theta, phi, rho);  alignmentVector = [dX,dY,dZ];
             Example:
             Rotate the point [3,4,-7] with respect to the following:
             Original associated vector is always [1,0,0]
             Calculate the appropriate rotation requested with respect to the x-axis.  For
             example, if only a rotation about the z-axis is
             sought, alignmentVector = [2,1,0]      Note that the z-component is zero
             rotData = rotatePoints(alignmentVector, [3,4,-7]);
             Author: Shawn Arseneau
             Created: Feb.2, 2006
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="alignmentVector">Input argument #1</param>
             <param name="originalData">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2">
             <summary>
             Provides a single output, 0-input Objectinterface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <param name="X">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <param name="X">Input argument #1</param>
             <param name="str">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="X">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.scatter3_2(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the scatter3_2 M-function.
             </summary>
             <remarks>
             M-Documentation:
             SCATTER3_2 - scatter plot 3 dimensional data 
             (slight modification of MATLAB's scatter3.m)
             First argument - input is an nx3 matrix. output is a scatter plot graph, where
             each point
             comes from one of the rows of the input matrix. The matrix must have 3
             columns.
             Optional second argument - string to determine plotting style, using same
             options as in MATLAB's plot function
             EXAMPLE:  >> A = rand(20,3);
             >> scatter3_2(A);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="X">Input argument #1</param>
             <param name="str">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor">
             <summary>
             Provides a single output, 0-input Objectinterface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="s">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="s">Input argument #1</param>
             <param name="Z">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Object,System.Object,System.Object[])">
             <summary>
             Provides a single output, 3-input Objectinterface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="s">Input argument #1</param>
             <param name="Z">Input argument #2</param>
             <param name="varargin">Array of Objects representing the input arguments 3
             through varargin.length+2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="s">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="s">Input argument #1</param>
             <param name="Z">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.ScatteringFactor(System.Int32,System.Object,System.Object,System.Object[])">
             <summary>
             Provides the standard 3-input Object interface to the ScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             a1 b1 a2 b2 a3 b3 a4 b4 c
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="s">Input argument #1</param>
             <param name="Z">Input argument #2</param>
             <param name="varargin">Array of Objects representing the input arguments 3
             through varargin.length+2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor">
             <summary>
             Provides a single output, 0-input Objectinterface to the StructureFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the StructureFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <param name="Lattice_in1">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the StructureFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <param name="Lattice_in1">Input argument #1</param>
             <param name="Probe_in1">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the StructureFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the StructureFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice_in1">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.StructureFactor(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the StructureFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             Lattice: a structure data-type containing:
             .Type: 'cubic', 'hexagonal', etc
             .a .b .c: lattice constants (depending on lattice type some of these are
             optional)
             .alpha .beta .gamma: lattice constants (depending on lattice type some of these
             are optional)
             .AtomicPositions: n by 3  matrix, each row represents atomic coordinates in space
             of the lattice (i.e. non cartesian) 
             .Reflection: a 1x3 vector containing the Miller indices of the reflection of
             interest
             .Normal: a 1x3 vector defining the direction of the surface normal of the crystal
             Probe (optional): a structure data-type containg:
             .Type : a string defining the type of probe ('xrays' or 'electrons')
             .Energy: energy of the probe in eV
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice_in1">Input argument #1</param>
             <param name="Probe_in1">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal">
             <summary>
             Provides a void output, 0-input Objectinterface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Object)">
             <summary>
             Provides a void output, 1-input Objectinterface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="Lattice">Input argument #1</param>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Object,System.Object)">
             <summary>
             Provides a void output, 2-input Objectinterface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Vol">Input argument #2</param>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Object,System.Object,System.Object)">
             <summary>
             Provides a void output, 3-input Objectinterface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="Lattice">Input argument #1</param>
             <param name="Vol">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Vol">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.VisualizeCrystal(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the VisualizeCrystal
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Additional units for the basis
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Lattice">Input argument #1</param>
             <param name="Vol">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength">
             <summary>
             Provides a single output, 0-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayAttenuationLength(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the XrayAttenuationLength
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor">
             <summary>
             Provides a single output, 0-input Objectinterface to the
             XrayComplexScatteringFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the
             XrayComplexScatteringFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="Z">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the
             XrayComplexScatteringFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="Energy">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the
             XrayComplexScatteringFactor M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="Energy">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayComplexScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayComplexScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayComplexScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="Energy">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayComplexScatteringFactor(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayComplexScatteringFactor
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             save test.mat Z Energy
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="Energy">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction">
             <summary>
             Provides a single output, 0-input Objectinterface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="FigNum">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayIndexOfRefraction(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the XrayIndexOfRefraction
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="FigNum">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor">
             <summary>
             Provides a single output, 0-input Objectinterface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayRealScatteringFactor(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayRealScatteringFactor
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Z">Input argument #1</param>
             <param name="s">Input argument #2</param>
             <param name="FigNum">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity">
             <summary>
             Provides a single output, 0-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="kpol">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 6-input Objectinterface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="kpol">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="kpol">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayReflectivity(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 6-input Object interface to the XrayReflectivity
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="alpha">Input argument #4</param>
             <param name="kpol">Input argument #5</param>
             <param name="FigNum">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission">
             <summary>
             Provides a single output, 0-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Object)">
             <summary>
             Provides a single output, 1-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 4-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="Thickness">Input argument #4</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 5-input Objectinterface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="Thickness">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 4-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="Thickness">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.XrayTransmission(System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 5-input Object interface to the XrayTransmission
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Symbol">Input argument #1</param>
             <param name="Density">Input argument #2</param>
             <param name="EnergyOrLambda">Input argument #3</param>
             <param name="Thickness">Input argument #4</param>
             <param name="FigNum">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:DIFFWIZNative.Diffraction.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
        <member name="T:MathWorks.MATLAB.NET.ComponentData.MCRComponentState">
            <summary>
            The MCR Component State
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_name_data">
            <summary>
            The .NET Builder component name
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_root_data">
            <summary>
            The component root data
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_public_data">
            <summary>
            The public encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_session_data">
            <summary>
            The session encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_matlabpath_data">
            <summary>
            The MATLAB path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_matlabpath_data_count">
            <summary>
            The MATLAB path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_classpath_data">
            <summary>
            The class path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_classpath_data_count">
            <summary>
            The class path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_libpath_data">
            <summary>
            The lib path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_libpath_data_count">
            <summary>
            The lib path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_mcr_application_options">
            <summary>
            The MCR application options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_mcr_application_option_count">
            <summary>
            The MCR application options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_mcr_runtime_options">
            <summary>
            The MCR runtime options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_mcr_runtime_option_count">
            <summary>
            The MCR runtime options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_mcr_pref_dir">
            <summary>
            The component preferences directory
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_set_warning_state">
            <summary>
            Runtime warning states
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_DIFFWIZ_set_warning_state_count">
            <summary>
            Runtime warning state count
            </summary>
        </member>
    </members>
</doc>
